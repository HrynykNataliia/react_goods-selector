{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","getListInformation","listCopy","lastGood","pop","length","join","className","this","type","onClick","setState","map","good","classNames","includes","filter","el","React","Component","ReactDOM","render","document","getElementById"],"mappings":"6QAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAQIC,E,4MACJC,MAAQ,CACNC,cAAe,CAAC,Q,EAGlBC,mBAAqB,WACnB,IAAQD,EAAkB,EAAKD,MAAvBC,cACFE,EAAQ,YAAOF,GAEfG,EAAWD,EAASE,MAE1B,OAAQJ,EAAcK,QACpB,KAAK,EACH,MAAO,oBACT,KAAK,EACH,MAAM,GAAN,OAAUL,EAAc,GAAxB,gBACF,KAAK,EACH,MAAM,GAAN,OAAUA,EAAcM,KAAK,SAA7B,iBACF,QACE,MAAM,GAAN,OAAUJ,EAASI,KAAK,MAAxB,gBAAqCH,EAArC,mB,4CAIN,WAAU,IAAD,OACP,OACE,sBAAKI,UAAU,MAAf,UACE,oBAAIA,UAAU,sBAAd,SAAqCC,KAAKP,uBAE1C,sBAAKM,UAAU,cAAf,YACKC,KAAKT,MAAMC,cAAcK,QAC1B,wBACEI,KAAK,SACLF,UAAU,+BACVG,QAAS,kBAAM,EAAKC,SAAS,CAAEX,cAAe,MAHhD,eAQF,oBAAIO,UAAU,WAAd,SACGV,EAAgBe,KAAI,SAAAC,GAAI,OACvB,qBAEEN,UAAWO,IACT,oBACA,CACE,+BAAgC,EAAKf,MAAMC,cAAce,SAASF,KALxE,UASGA,EACA,IACA,EAAKd,MAAMC,cAAce,SAASF,GACjC,wBACEJ,KAAK,SACLF,UAAU,+BACVG,QAAS,kBAAM,EAAKC,UAAS,kBAAwB,CACnDX,cAD2B,EAAGA,cACDgB,QAAO,SAAAC,GAAE,OAAIA,IAAOJ,UAJrD,oBAUA,wBACEJ,KAAK,SACLF,UAAU,gCACVG,QAAS,kBAAM,EAAKC,UAAS,gBAAGX,EAAH,EAAGA,cAAH,MAAwB,CACnDA,cAAc,GAAD,mBAAMA,GAAN,CAAqBa,SAJtC,mBArBGA,kB,GAzCHK,IAAMC,WAiFTrB,ICnGfsB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6dec8760.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[],\n};\n\n// eslint-disable-next-line react/prefer-stateless-function\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  getListInformation = () => {\n    const { selectedGoods } = this.state;\n    const listCopy = [...selectedGoods];\n\n    const lastGood = listCopy.pop();\n\n    switch (selectedGoods.length) {\n      case 0:\n        return 'No goods selected';\n      case 1:\n        return `${selectedGoods[0]} is selected`;\n      case 2:\n        return `${selectedGoods.join(' and ')} are selected`;\n      default:\n        return `${listCopy.join(', ')} and ${lastGood} are selected`;\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1 className=\"App_title box title\">{this.getListInformation()}</h1>\n\n        <div className=\"App_box box\">\n          {!!this.state.selectedGoods.length && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-outlined\"\n              onClick={() => this.setState({ selectedGoods: [] })}\n            >\n              X\n            </button>\n          )}\n          <ul className=\"App_list\">\n            {goodsFromServer.map(good => (\n              <li\n                key={good}\n                className={classNames(\n                  'App_list-item box',\n                  {\n                    'has-background-primary-light': this.state.selectedGoods.includes(good),\n                  },\n                )}\n              >\n                {good}\n                {' '}\n                {this.state.selectedGoods.includes(good) ? (\n                  <button\n                    type=\"button\"\n                    className=\"button is-danger is-outlined\"\n                    onClick={() => this.setState(({ selectedGoods }) => ({\n                      selectedGoods: selectedGoods.filter(el => el !== good),\n                    }))}\n                  >\n                    Remove\n                  </button>\n                ) : (\n                  <button\n                    type=\"button\"\n                    className=\"button is-primary is-outlined\"\n                    onClick={() => this.setState(({ selectedGoods }) => ({\n                      selectedGoods: [...selectedGoods, good],\n                    }))}\n                  >\n                    Add\n                  </button>\n                )}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}